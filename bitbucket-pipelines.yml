image: node:20

definitions:
  steps:
    - step: &snyk-sec-test
        name: Run Security Test with Snyk Code Security
        image: snyk/snyk:node
        script:
          - snyk auth $SNYK_TOKEN
          - snyk test --severity-threshold=low --org=erselekmen27 || true

#    - step: &sonarqube-quality-test
#        name: SonarQube Code Quality Analysis
#        image: sonarsource/sonar-scanner-cli:latest
#        script:
#          - sonar-scanner -Dsonar.projectKey=$SQ_PROJECT_KEY -Dsonar.host.url=$SQ_EC2_HOST:$SQ_EC2_PORT -Dsonar.login=$SQ_TOKEN

    - step: &install-and-build
        name: Install Dependencies and Build
        caches:
          - node
        script:
          - npm install
          - npm install -g @vue/cli
          - npm run build
        artifacts:
          - dist/**

    - step: &deploy-to-s3
        name: Install aws-cli and Deploy to AWS S3
        oidc: true
        script:
          - apt-get update
          - apt-get install -y awscli --upgrade
          - export AWS_REGION=$AWS_REGION
          - export AWS_ROLE_ARN=$AWS_ROLE_ARN
          - export AWS_WEB_IDENTITY_TOKEN_FILE=$(pwd)/web-identity-token
          - echo $BITBUCKET_STEP_OIDC_TOKEN > $(pwd)/web-identity-token
          - aws s3 sync dist/ s3://training-app-build/

    - step: &build-and-deploy-ecs
        name: Build and Deploy to ECS
        image: atlassian/pipelines-awscli
        services:
          - docker
        script:
          - export TEMP_ROLE=$(aws sts assume-role --role-arn "arn:aws:iam::110975517810:role/ECS-bitbucket-pipelines-sts-access" --role-session-name bitbucket-pipeline --query 'Credentials.[AccessKeyId,SecretAccessKey,SessionToken]' --output text)
          - export AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID
          - export AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY
          - export AWS_SESSION_TOKEN=$AWS_SESSION_TOKEN

          - docker build -t $ECR_REPOSITORY:latest .
          - aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin 110975517810.dkr.ecr.eu-central-1.amazonaws.com/training-app
          - docker tag $ECR_REPOSITORY:latest $ECR_REPOSITORY:$BITBUCKET_COMMIT
          - docker push $ECR_REPOSITORY:latest
          - docker push $ECR_REPOSITORY:$BITBUCKET_COMMIT
          - aws ecs update-service --cluster $ECS_CLUSTER_NAME --service $ECS_SERVICE_NAME --force-new-deployment


pipelines:
  branches:
    ersel-dev:
      - step: *build-and-deploy-ecs
      - step: *snyk-sec-test
#      - step: *sonarqube-quality-test
      - step: *install-and-build
      - step: *deploy-to-s3
